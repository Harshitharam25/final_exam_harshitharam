# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZvOekJoz6mSz--0qqzzjTmz9y-0DNQVK
"""



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
!pip install matplotlib-venn
!apt-get -qq install -y libfluidsynth1
# https://pypi.python.org/pypi/libarchive
!apt-get -qq install -y libarchive-dev && pip install -U libarchive
import libarchive
# https://pypi.python.org/pypi/pydot
!apt-get -qq install -y graphviz && pip install pydot
import pydot
!pip install cartopy
import cartopy
!pip install streamlit
import streamlit as st

# task 1: Print the square of numbers from 3 to 10
# Loop through numbers from 3 up to 10
for i in range(3, 11):
  # Calculate the square of the current number (i) and print it
  print(i**2)

for i in range(3, 11):
    print(f"The square of {i} is {i**2}")

# Task 2: Define a function check grades (grades) that: : Takes a list of numbers(grades) For each grade, prints: "Pass"if the grade is 81 or more. "Try again otherwise. Test it with a list of at least 5 grades

def check_grades(grades):
  """Checks and prints the status for each grade."""
  # Loop through each grade in the input list
  for grade in grades:
    # if the current grade is 81 or more
    if grade >= 81:
      # if the grade is 81 or more, print "Pass"
      print("Pass")
    else:
      # Otherwise (if the grade is less than 81), print "Try again"
      print("Try again")

# Test the function with a list of sample grades
test_grades = [85, 70, 92, 55, 81, 78, 95,100]
check_grades(test_grades)

# task 3: Count vowels and their frequency
def count_vowels(text):
  """Counts the number of vowels in a given string and prints the counts."""
  # Define the vowels to be counted
  vowels = "aeiouAEIOU"
  # Initialize a dictionary
  vowel_counts = {}
  # Initialize a variable
  total_vowel_count = 0

  # Iterate through each character in the input string
  for char in text:
    if char in vowels:
      # Increment the total vowel count
      total_vowel_count += 1
      # Convert to lowercase for proper counting
      char_lower = char.lower()
      # Increment the count for the specific vowel
      vowel_counts[char_lower] = vowel_counts.get(char_lower, 0) + 1

  # Print the total num of vowels
  print(f"Total number of vowels: {total_vowel_count}")
  # Print the individual vowel counts
  print("Individual vowel counts:")
  for vowel, count in vowel_counts.items():
    print(f"{vowel}: {count}")

# Test the function with the given string
input_string = "YOu can have allthe fancy tools, but if data quality is not good, you're nowhere Veda Bawo"
count_vowels(input_string)

# Task 4: Collect numbers from user and calculate average

# Initializing the empty list to store the numbers
numbers = []

while True:
  # Prompt to enter a num or 'done' to finish
  user_input = input("Enter a number (or type 'done' to complete): ")

  # Checking if the user wants to exit the loop
  if user_input.lower() == 'done':
    break  # Exit the while loop

  # Try to convert the input to a floating-point number
  try:
    number = float(user_input)
    # If successful, add the number to the list
    numbers.append(number)
  except ValueError:
    # If conversion fails (invalid input), print an error message
    print("Invalid input. Try again.")

# After the loop,if any numbers were entered
if numbers:
  # Calculate the total number of values entered
  total_values = len(numbers)
  # Calculate the sum of the numbers
  sum_of_numbers = sum(numbers)
  # Calculate the average, rounded to 2 decimal places
  average = round(sum_of_numbers / total_values, 2)

  # Print the results
  print(f"\nTotal num of values entered: {total_values}")
  print(f"The average of the numbers is: {average}")
else:
  # If no num entered, print a message
  print("\n No numbers entered.")

# Task 5: Calculate the total spent by each customer

# This list contains purchase data, with each item being a tuple of (customer_name, amount_spent)
purchases = [("Alice", 120), ("Bob", 80), ("Alice", 50), ("Bob", 20), ("Clara", 200)]

# This dictionary will store the total amount spent by each customer.
# The keys will be customer names, and the values will be the total spent.
customer_totals = {}

# Loop through each purchase in the purchases list
for name, amount in purchases:
    # if the customer's name is already a key in the customer_totals dictionary
    if name in customer_totals:
        # If the customer exists, add the current purchase amount to their total
        customer_totals[name] += amount
    else:
        # If the customer does not exist, add them to the dictionary with the current purchase amount as their total
        customer_totals[name] = amount

# After processing all purchases, loop through the customer_totals dictionary
# .items() gives us key-value pairs (customer name and their total spent)
for customer, total in customer_totals.items():
    # Print the total amount spent for each customer
    print(f"{customer} spent ${total}")

# task 6: to get the population data from World Bank API!
!pip install wbdata

import wbdata
import pandas as pd
from datetime import datetime

# Set date range
start_date = datetime(2010, 1, 1)
end_date = datetime(2020, 12, 31)

# Define indicator: Total Population
indicators = {'SP.POP.TOTL': 'Population'}

# Get population data for Poland(country code = 'PL')
df = wbdata.get_dataframe(indicators, country='PL', date=(start_date, end_date))

# Reset index to get 'date' as a column
df.reset_index(inplace=True)

# Print the result
print(df)